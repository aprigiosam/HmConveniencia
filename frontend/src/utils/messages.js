/**
 * Sistema de mensagens bem-humoradas para o HMConveniencia
 * Porque trabalhar com invent√°rio n√£o precisa ser chato! üéâ
 */

// Mensagens de loading (opera√ß√µes em andamento)
export const loadingMessages = {
  // Invent√°rio
  inventario: {
    buscando: 'üîç Procurando seus produtos como quem procura as chaves do carro...',
    salvando: 'üíæ Salvando... (n√£o se preocupe, j√° salvei seu jogo antes)',
    finalizando: 'üéØ Finalizando invent√°rio... Quase l√°, campe√£o!',
    excluindo: 'üóëÔ∏è Deletando item... Ops, isso n√£o volta mais!',
    carregando: '‚è≥ Carregando dados... (aproveitando pra tomar um caf√©)',
  },

  // Open Food Facts
  openFood: {
    buscando: 'üåç Perguntando pro mundo sobre esse produto...',
    encontrando: 'üéä Eureka! Achamos algo!',
  },

  // Vendas
  vendas: {
    processando: 'üí∞ Processando venda... Dinheiro no bolso!',
    cancelando: '‚ùå Cancelando venda... Mudou de ideia, n√©?',
    recebendo: '‚úÖ Registrando pagamento... Show de bola!',
  },

  // Caixa
  caixa: {
    abrindo: 'üîì Abrindo caixa... Preparando pra fazer $$$',
    fechando: 'üîí Fechando caixa... Hora de contar a grana!',
    sangria: 'üí∏ Fazendo sangria... (calma, √© s√≥ tirar dinheiro)',
    suprimento: 'üíµ Adicionando suprimento... Refor√ßo chegando!',
  },

  // Produtos
  produtos: {
    salvando: 'üì¶ Salvando produto... Mais um pro estoque!',
    excluindo: 'üóëÔ∏è Removendo produto... Tchau tchau!',
    atualizando: '‚úèÔ∏è Atualizando... Deixa eu s√≥ arrumar isso aqui',
  },

  // Lotes
  lotes: {
    criando: 'üìã Criando lote... FEFO em a√ß√£o!',
    conferindo: '‚úîÔ∏è Conferindo lote... Tudo certinho aqui!',
  },
};

// Mensagens de sucesso
export const successMessages = {
  // Invent√°rio
  inventario: {
    itemAdicionado: [
      'üéâ Item adicionado! Mais um na lista!',
      '‚úÖ Contagem registrada! Voc√™ √© r√°pido, hein?',
      'üëç Anotado! Pr√≥ximo!',
      'üìù Registrado com sucesso! Bora pro pr√≥ximo!',
    ],
    itemRemovido: [
      'üóëÔ∏è Item removido! Como se nunca tivesse existido...',
      'üí® Poof! Sumiu!',
      'üé≠ Item deletado! Ele foi pro espa√ßo...',
    ],
    sessaoFinalizada: [
      'üéä Invent√°rio finalizado! Pode comemorar!',
      'üèÜ Pronto! Estoque ajustado com maestria!',
      '‚ú® Finalizado! Voc√™ merece um caf√©!',
      'üéØ Sucesso total! Invent√°rio 100% completo!',
    ],
    sessaoCriada: [
      'üé¨ Nova sess√£o criada! Vamos contar tudo!',
      'üìã Sess√£o iniciada! Bora trabalhar!',
    ],
    sincronizado: [
      '‚òÅÔ∏è Sincronizado! Tudo salvo na nuvem!',
      '‚úÖ Online novamente! Dados salvos!',
      'üîÑ Sincroniza√ß√£o completa! Ufa!',
    ],
  },

  // Open Food Facts
  openFood: {
    encontrado: [
      'üéä Produto encontrado! A internet √© maravilhosa!',
      'üåü Achamos! Dados preenchidos automaticamente!',
      'üî• Sucesso! Open Food Facts salvou sua vida!',
    ],
    aplicado: [
      '‚ú® Dados aplicados! Olha que chique!',
      'üëå Informa√ß√µes atualizadas! T√° bonito agora!',
    ],
  },

  // Vendas
  vendas: {
    finalizada: [
      'üí∞ Venda finalizada! Dinheiro no caixa!',
      'üéâ Vendeu! Cliente feliz, caixa cheio!',
      'üíµ Show! Mais uma venda no bolso!',
    ],
    cancelada: [
      '‚ùå Venda cancelada! Acontece...',
      'üîô Revertido! Como se n√£o tivesse acontecido',
    ],
    paga: [
      '‚úÖ Pagamento recebido! T√° quitado!',
      'üíö Recebido! Sem d√≠vidas aqui!',
    ],
  },

  // Caixa
  caixa: {
    aberto: [
      'üîì Caixa aberto! Bom dia de trabalho!',
      'üíº Caixa pronto! Vamos fazer neg√≥cio!',
    ],
    fechado: [
      'üîí Caixa fechado! Hora de ir pra casa!',
      'üí§ Fechado! Pode descansar agora!',
      'üèÅ Expediente encerrado! At√© amanh√£!',
    ],
  },

  // Produtos
  produtos: {
    salvo: [
      'üì¶ Produto salvo! Mais um no cat√°logo!',
      '‚úÖ Cadastrado! Pronto pra vender!',
    ],
    atualizado: [
      '‚úèÔ∏è Atualizado! Mudan√ßa feita!',
      'üîÑ Produto atualizado! T√° novinho!',
    ],
  },
};

// Mensagens de erro (mas com bom humor)
export const errorMessages = {
  // Invent√°rio
  inventario: {
    semQuantidade: 'ü§î Psiu! Faltou a quantidade contada! (√© o campo mais importante)',
    itemDuplicado: '‚ö†Ô∏è Opa! Esse produto j√° foi contado nessa sess√£o! Melhor editar o existente.',
    sessaoFinalizada: 'üîí Essa sess√£o j√° foi finalizada! N√£o d√° mais pra mexer aqui.',
    sessaoNaoEncontrada: '‚ùì Sess√£o n√£o encontrada... Ser√° que foi pro espa√ßo?',
    erroCarregar: 'üòÖ Deu ruim ao carregar... Tenta de novo?',
    erroSalvar: 'üíî N√£o consegui salvar... Internet t√° boa?',
    erroFinalizar: '‚ö†Ô∏è Falha ao finalizar... Confere se t√° tudo certo!',
    produtoNaoEncontrado: 'üîç Produto n√£o encontrado! Tem certeza que ele existe?',
    loteInvalido: 'üìã Esse lote n√£o existe! Confere o n√∫mero?',
  },

  // Open Food Facts
  openFood: {
    semCodigo: 'ü§∑ Cad√™ o c√≥digo de barras? Preciso dele pra buscar!',
    semTermo: 'üîç Digite algo pra eu buscar! (nome, marca, qualquer coisa)',
    naoEncontrado: 'üòî N√£o achei nada... Tenta outro termo?',
    erroApi: 'üåê Open Food Facts t√° offline... Mas voc√™ pode preencher manual!',
    nenhumResultado: 'ü§î Busca n√£o retornou nada... Tenta de outro jeito?',
  },

  // Vendas
  vendas: {
    carrinhoVazio: 'üõí Carrinho vazio! Adiciona algum produto primeiro!',
    semCliente: 'üë§ Pra fiado precisa escolher o cliente! (sen√£o como cobrar?)',
    limiteExcedido: 'üí≥ Limite de cr√©dito do cliente estourou! Melhor conversar...',
    estoqueInsuficiente: 'üì¶ Estoque insuficiente! T√° faltando produto!',
    produtoInativo: '‚ö†Ô∏è Esse produto t√° inativo! N√£o pode vender.',
  },

  // Caixa
  caixa: {
    jaAberto: 'üîì J√° tem um caixa aberto! Fecha ele primeiro.',
    naoPodeFechar: '‚ö†Ô∏è N√£o d√° pra fechar agora... Confere se t√° tudo certo!',
    valorInvalido: 'üí∞ Valor inv√°lido! Confere os n√∫meros a√≠.',
  },

  // Geral
  geral: {
    campoObrigatorio: '‚ö†Ô∏è Esse campo √© obrigat√≥rio! Preenche a√≠!',
    erroGenerico: 'üòÖ Ops! Algo deu errado... Tenta de novo?',
    semInternet: 'üì∂ Sem internet! Mas calma, salvamos offline!',
    erroPermissao: 'üîê Voc√™ n√£o tem permiss√£o pra isso!',
    sessaoExpirada: '‚è∞ Sua sess√£o expirou! Faz login de novo?',
  },
};

// Mensagens de aviso
export const warningMessages = {
  inventario: {
    diferencaGrande: '‚ö†Ô∏è Diferen√ßa grande detectada! Confere se t√° certo mesmo?',
    semLote: 'üìã Produto tem lotes mas voc√™ n√£o selecionou nenhum!',
    categoriaInexistente: 'üè∑Ô∏è Essa categoria n√£o existe! Seleciona outra ou cria depois.',
    produtoVencido: '‚è∞ Cuidado! Esse produto j√° venceu!',
    produtoVencendo: '‚è≥ Aten√ß√£o! Esse produto vence em breve!',
  },

  vendas: {
    precoZero: 'üíµ Pre√ßo zerado! Tem certeza?',
    descontoAlto: 'üí∏ Desconto muito alto! Confirma?',
  },

  caixa: {
    diferenca: 'üí∞ Diferen√ßa no caixa! Confere os valores!',
    valorBaixo: '‚ö†Ô∏è Valor de abertura muito baixo!',
  },
};

// Mensagens de confirma√ß√£o
export const confirmMessages = {
  inventario: {
    finalizar: 'üéØ Tem certeza que quer finalizar? Depois n√£o d√° pra voltar!',
    excluirItem: 'üóëÔ∏è Remover esse item da contagem?',
    excluirSessao: '‚ùå Deletar toda a sess√£o? (isso n√£o tem volta)',
  },

  vendas: {
    cancelar: '‚ùå Cancelar essa venda? O estoque vai voltar!',
  },

  caixa: {
    fechar: 'üîí Fechar o caixa? Confere se os valores est√£o certos!',
  },

  produtos: {
    excluir: 'üóëÔ∏è Deletar esse produto? (n√£o tem ctrl+z)',
    excluirTodos: '‚ö†Ô∏è ATEN√á√ÉO! Deletar TODOS os produtos? √â s√©rio mesmo?',
  },
};

// Helper para pegar mensagem aleat√≥ria de um array
export const getRandomMessage = (messages) => {
  if (Array.isArray(messages)) {
    return messages[Math.floor(Math.random() * messages.length)];
  }
  return messages;
};

// Helper para mostrar mensagem com notifica√ß√£o Mantine
export const showMessage = (notifications, type, category, messageKey, customMessage) => {
  const messages = {
    loading: loadingMessages,
    success: successMessages,
    error: errorMessages,
    warning: warningMessages,
  };

  let message = customMessage;

  if (!message && messages[type] && messages[type][category]) {
    const categoryMessages = messages[type][category];
    message = categoryMessages[messageKey];

    if (Array.isArray(message)) {
      message = getRandomMessage(message);
    }
  }

  const colors = {
    loading: 'blue',
    success: 'green',
    error: 'red',
    warning: 'yellow',
  };

  const icons = {
    loading: '‚è≥',
    success: '‚úÖ',
    error: '‚ùå',
    warning: '‚ö†Ô∏è',
  };

  return notifications.show({
    message: message || 'Opera√ß√£o realizada',
    color: colors[type] || 'blue',
    icon: icons[type],
    autoClose: type === 'loading' ? false : 4000,
  });
};
