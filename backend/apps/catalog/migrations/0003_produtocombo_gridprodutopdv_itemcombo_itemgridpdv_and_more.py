# Generated by Django 5.2.6 on 2025-09-30 17:18

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0002_fornecedor_condicoes_pagamento_fornecedor_contatos_and_more'),
        ('core', '0004_profile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProdutoCombo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('sku', models.CharField(max_length=50, unique=True)),
                ('tipo', models.CharField(choices=[('FIXO', 'Fixo'), ('FLEXIVEL', 'Flexível')], default='FIXO', max_length=10)),
                ('preco_combo', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('preco_original', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('desconto_percentual', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='combos/')),
                ('ativo', models.BooleanField(default=True)),
                ('estoque_minimo', models.IntegerField(default=0)),
                ('ordem_exibicao', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Combo',
                'verbose_name_plural': 'Combos',
                'ordering': ['ordem_exibicao', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='GridProdutoPDV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100)),
                ('ordem', models.IntegerField(default=0)),
                ('ativo', models.BooleanField(default=True)),
                ('loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grids_pdv', to='core.loja')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grids_pdv', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grid de Produtos PDV',
                'verbose_name_plural': 'Grids de Produtos PDV',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ItemCombo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantidade', models.DecimalField(decimal_places=3, default=Decimal('1.000'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('opcional', models.BooleanField(default=False)),
                ('substituivel', models.BooleanField(default=False)),
                ('ordem', models.IntegerField(default=0)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.produto')),
                ('combo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='catalog.produtocombo')),
            ],
            options={
                'verbose_name': 'Item do Combo',
                'verbose_name_plural': 'Itens do Combo',
                'ordering': ['ordem', 'id'],
                'unique_together': {('combo', 'produto')},
            },
        ),
        migrations.CreateModel(
            name='ItemGridPDV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('posicao_x', models.IntegerField(default=0)),
                ('posicao_y', models.IntegerField(default=0)),
                ('cor_fundo', models.CharField(default='#FFFFFF', max_length=7)),
                ('tamanho', models.CharField(choices=[('pequeno', 'Pequeno'), ('normal', 'Normal'), ('grande', 'Grande')], default='normal', max_length=10)),
                ('grid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='catalog.gridprodutopdv')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.produto')),
            ],
            options={
                'verbose_name': 'Item de Grid PDV',
                'verbose_name_plural': 'Itens de Grid PDV',
                'ordering': ['posicao_y', 'posicao_x'],
                'unique_together': {('grid', 'produto')},
            },
        ),
        migrations.AddField(
            model_name='gridprodutopdv',
            name='produtos',
            field=models.ManyToManyField(related_name='grids_pdv', through='catalog.ItemGridPDV', to='catalog.produto'),
        ),
        migrations.CreateModel(
            name='ListaPreco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
                ('tipo', models.CharField(choices=[('PADRAO', 'Padrão'), ('ATACADO', 'Atacado'), ('VAREJO', 'Varejo'), ('VIP', 'VIP'), ('PROMOCIONAL', 'Promocional')], default='PADRAO', max_length=15)),
                ('ativa', models.BooleanField(default=True)),
                ('quantidade_minima', models.IntegerField(default=0)),
                ('valor_minimo_pedido', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('validade_inicio', models.DateTimeField(blank=True, null=True)),
                ('validade_fim', models.DateTimeField(blank=True, null=True)),
                ('dias_semana', models.CharField(blank=True, help_text='0-6 separados por vírgula', max_length=20)),
                ('horario_inicio', models.TimeField(blank=True, null=True)),
                ('horario_fim', models.TimeField(blank=True, null=True)),
                ('prioridade', models.IntegerField(default=0)),
                ('loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listas_preco', to='core.loja')),
            ],
            options={
                'verbose_name': 'Lista de Preços',
                'verbose_name_plural': 'Listas de Preços',
                'ordering': ['-prioridade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ProdutoComposto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('descricao_producao', models.TextField(blank=True)),
                ('tempo_preparo', models.IntegerField(default=0, help_text='Minutos')),
                ('custo_adicional', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('produto_final', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='composicao', to='catalog.produto')),
            ],
            options={
                'verbose_name': 'Produto Composto',
                'verbose_name_plural': 'Produtos Compostos',
            },
        ),
        migrations.CreateModel(
            name='Promocao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('tipo', models.CharField(choices=[('LEVE_PAGUE', 'Leve X Pague Y'), ('DESCONTO_PROGRESSIVO', 'Desconto Progressivo'), ('COMPRE_GANHE', 'Compre X Ganhe Y'), ('DESCONTO_CATEGORIA', 'Desconto em Categoria'), ('CASHBACK', 'Cashback em Pontos')], max_length=25)),
                ('ativa', models.BooleanField(default=True)),
                ('validade_inicio', models.DateTimeField()),
                ('validade_fim', models.DateTimeField()),
                ('quantidade_compra', models.IntegerField(default=0)),
                ('quantidade_paga', models.IntegerField(default=0)),
                ('desconto_percentual', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('quantidade_brinde', models.IntegerField(default=1)),
                ('pontos_cashback', models.IntegerField(default=0)),
                ('multiplicador_pontos', models.DecimalField(decimal_places=1, default=Decimal('1.0'), max_digits=3)),
                ('quantidade_maxima_uso', models.IntegerField(default=0, help_text='0=ilimitado')),
                ('quantidade_maxima_cliente', models.IntegerField(default=0, help_text='0=ilimitado')),
                ('valor_minimo_compra', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('prioridade', models.IntegerField(default=0)),
                ('exibir_pdv', models.BooleanField(default=True)),
                ('categorias', models.ManyToManyField(blank=True, related_name='promocoes', to='catalog.categoria')),
                ('loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocoes', to='core.loja')),
                ('produto_brinde', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promocoes_brinde', to='catalog.produto')),
                ('produtos', models.ManyToManyField(blank=True, related_name='promocoes', to='catalog.produto')),
            ],
            options={
                'verbose_name': 'Promoção',
                'verbose_name_plural': 'Promoções',
                'ordering': ['-prioridade', '-validade_inicio'],
            },
        ),
        migrations.CreateModel(
            name='UsoPromocao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('venda_id', models.IntegerField()),
                ('valor_desconto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_uso', models.DateTimeField(auto_now_add=True)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cliente')),
                ('promocao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='usos', to='catalog.promocao')),
            ],
            options={
                'verbose_name': 'Uso de Promoção',
                'verbose_name_plural': 'Usos de Promoções',
                'ordering': ['-data_uso'],
            },
        ),
        migrations.CreateModel(
            name='ItemListaPreco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_desconto', models.CharField(choices=[('FIXO', 'Preço Fixo'), ('PERCENTUAL', 'Desconto Percentual'), ('VALOR', 'Desconto em Valor')], default='PERCENTUAL', max_length=11)),
                ('preco_fixo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('desconto_percentual', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('desconto_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantidade_minima', models.IntegerField(default=1)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.categoria')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.produto')),
                ('lista_preco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='catalog.listapreco')),
            ],
            options={
                'verbose_name': 'Item de Lista de Preços',
                'verbose_name_plural': 'Itens de Lista de Preços',
                'unique_together': {('lista_preco', 'produto')},
            },
        ),
        migrations.CreateModel(
            name='OpcaoSubstituicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acrescimo_preco', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('item_combo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opcoes_substituicao', to='catalog.itemcombo')),
                ('produto_substituto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.produto')),
            ],
            options={
                'verbose_name': 'Opção de Substituição',
                'verbose_name_plural': 'Opções de Substituição',
                'unique_together': {('item_combo', 'produto_substituto')},
            },
        ),
        migrations.CreateModel(
            name='IngredienteComposto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantidade', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('unidade', models.CharField(default='un', max_length=10)),
                ('ordem', models.IntegerField(default=0)),
                ('produto_ingrediente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.produto')),
                ('produto_composto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredientes', to='catalog.produtocomposto')),
            ],
            options={
                'verbose_name': 'Ingrediente',
                'verbose_name_plural': 'Ingredientes',
                'ordering': ['ordem', 'id'],
                'unique_together': {('produto_composto', 'produto_ingrediente')},
            },
        ),
        migrations.CreateModel(
            name='ProdutoFavorito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ordem', models.IntegerField(default=0)),
                ('contador_uso', models.IntegerField(default=0)),
                ('loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produtos_favoritos', to='core.loja')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoritos', to='catalog.produto')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produtos_favoritos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Produto Favorito',
                'verbose_name_plural': 'Produtos Favoritos',
                'ordering': ['ordem', '-contador_uso', 'produto__nome'],
                'unique_together': {('usuario', 'loja', 'produto')},
            },
        ),
    ]
