# Generated by Django 5.2.6 on 2025-09-30 17:18

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0003_produtocombo_gridprodutopdv_itemcombo_itemgridpdv_and_more'),
        ('core', '0004_profile'),
        ('sales', '0003_merge_0002_melhorias_controle_caixa_0002_sessaopdv'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClienteFidelidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pontos_atual', models.IntegerField(default=0, help_text='Pontos disponíveis atualmente')),
                ('pontos_total_acumulado', models.IntegerField(default=0, help_text='Total de pontos ganhos desde sempre')),
                ('pontos_total_usado', models.IntegerField(default=0, help_text='Total de pontos usados')),
                ('nivel', models.CharField(choices=[('BRONZE', 'Bronze'), ('PRATA', 'Prata'), ('OURO', 'Ouro'), ('DIAMANTE', 'Diamante')], default='BRONZE', max_length=10)),
                ('data_adesao', models.DateField(auto_now_add=True)),
                ('ativo', models.BooleanField(default=True)),
                ('cliente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fidelidade', to='core.cliente')),
            ],
            options={
                'verbose_name': 'Cliente Fidelidade',
                'verbose_name_plural': 'Clientes Fidelidade',
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoPontos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('CREDITO', 'Crédito'), ('DEBITO', 'Débito'), ('EXPIRACAO', 'Expiração'), ('AJUSTE', 'Ajuste Manual')], max_length=10)),
                ('pontos', models.IntegerField()),
                ('saldo_anterior', models.IntegerField()),
                ('saldo_novo', models.IntegerField()),
                ('motivo', models.TextField(blank=True)),
                ('venda_id', models.IntegerField(blank=True, help_text='ID da venda relacionada (se houver)', null=True)),
                ('data', models.DateField(auto_now_add=True)),
                ('expirado', models.BooleanField(default=False, help_text='Indica se estes pontos já expiraram')),
                ('cliente_fidelidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentacoes', to='sales.clientefidelidade')),
            ],
            options={
                'verbose_name': 'Movimentação de Pontos',
                'verbose_name_plural': 'Movimentações de Pontos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProgramaFidelidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(default='Programa de Fidelidade', help_text='Nome do programa', max_length=100)),
                ('ativo', models.BooleanField(default=True)),
                ('pontos_por_real', models.DecimalField(decimal_places=2, default=Decimal('1.00'), help_text='Quantos pontos o cliente ganha por cada R$ 1,00 gasto', max_digits=5)),
                ('valor_minimo_compra', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Valor mínimo de compra para ganhar pontos', max_digits=10)),
                ('pontos_por_real_desconto', models.DecimalField(decimal_places=2, default=Decimal('100.00'), help_text='Quantos pontos equivalem a R$ 1,00 de desconto', max_digits=10)),
                ('pontos_minimos_resgate', models.IntegerField(default=100, help_text='Pontos mínimos para começar a resgatar')),
                ('pontos_maximos_resgate_venda', models.IntegerField(default=0, help_text='Máximo de pontos que pode ser usado em uma venda (0=ilimitado)')),
                ('percentual_maximo_desconto', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Percentual máximo de desconto usando pontos em uma venda', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('pontos_expiram', models.BooleanField(default=False, help_text='Pontos têm validade?')),
                ('dias_validade_pontos', models.IntegerField(default=365, help_text='Dias de validade dos pontos')),
                ('multiplicador_aniversario', models.DecimalField(decimal_places=1, default=Decimal('2.0'), help_text='Multiplicador de pontos no mês de aniversário do cliente', max_digits=3)),
                ('bonus_cadastro', models.IntegerField(default=0, help_text='Pontos de bônus ao cadastrar no programa')),
                ('loja', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='programa_fidelidade', to='core.loja')),
            ],
            options={
                'verbose_name': 'Programa de Fidelidade',
                'verbose_name_plural': 'Programas de Fidelidade',
            },
        ),
        migrations.AddField(
            model_name='clientefidelidade',
            name='programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clientes', to='sales.programafidelidade'),
        ),
        migrations.CreateModel(
            name='Recompensa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('tipo', models.CharField(choices=[('DESCONTO', 'Desconto em Compra'), ('PRODUTO', 'Produto Grátis'), ('BRINDE', 'Brinde')], max_length=10)),
                ('pontos_necessarios', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('quantidade', models.IntegerField(default=1)),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='recompensas/')),
                ('ativa', models.BooleanField(default=True)),
                ('quantidade_disponivel', models.IntegerField(default=0, help_text='Quantidade de resgates disponíveis (0=ilimitado)')),
                ('validade_inicio', models.DateField(blank=True, null=True)),
                ('validade_fim', models.DateField(blank=True, null=True)),
                ('ordem', models.IntegerField(default=0)),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.produto')),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recompensas', to='sales.programafidelidade')),
            ],
            options={
                'verbose_name': 'Recompensa',
                'verbose_name_plural': 'Recompensas',
                'ordering': ['ordem', 'pontos_necessarios'],
            },
        ),
        migrations.CreateModel(
            name='ResgatePontos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pontos_gastos', models.IntegerField()),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('UTILIZADO', 'Utilizado'), ('CANCELADO', 'Cancelado')], default='PENDENTE', max_length=10)),
                ('venda_id', models.IntegerField(blank=True, help_text='ID da venda onde foi utilizado', null=True)),
                ('data_utilizacao', models.DateTimeField(blank=True, null=True)),
                ('cliente_fidelidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resgates', to='sales.clientefidelidade')),
                ('recompensa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.recompensa')),
            ],
            options={
                'verbose_name': 'Resgate de Pontos',
                'verbose_name_plural': 'Resgates de Pontos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='clientefidelidade',
            unique_together={('cliente', 'programa')},
        ),
    ]
