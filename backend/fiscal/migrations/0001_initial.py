# Generated by Django 5.0 on 2025-10-22 04:59

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0011_rename_core_fornec_ativo_idx_core_fornec_ativo_0c3f83_idx_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, verbose_name='Nome Fantasia')),
                ('cnpj', models.CharField(max_length=14, unique=True, verbose_name='CNPJ')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, verbose_name='Inscrição Estadual')),
                ('inscricao_municipal', models.CharField(blank=True, max_length=20, verbose_name='Inscrição Municipal')),
                ('ambiente', models.CharField(choices=[('HOMOLOGACAO', 'Homologação'), ('PRODUCAO', 'Produção')], default='HOMOLOGACAO', max_length=20, verbose_name='Ambiente SEFAZ')),
                ('certificado_a1', models.BinaryField(blank=True, null=True, verbose_name='Certificado A1 (.pfx) em binário')),
                ('senha_certificado', models.CharField(blank=True, max_length=255, verbose_name='Senha do Certificado')),
                ('certificado_validade', models.DateTimeField(blank=True, null=True, verbose_name='Validade do Certificado')),
                ('csc_id', models.CharField(blank=True, max_length=20, verbose_name='CSC ID (IDToken)')),
                ('csc_token', models.CharField(blank=True, max_length=120, verbose_name='CSC Token')),
                ('email_contato', models.EmailField(blank=True, max_length=254, verbose_name='Email para alertas')),
                ('telefone_contato', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'ordering': ['razao_social'],
            },
        ),
        migrations.CreateModel(
            name='NotaFiscal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('NFE', 'NF-e'), ('NFCE', 'NFC-e')], max_length=4, verbose_name='Tipo')),
                ('modelo', models.CharField(choices=[('55', '55 (NF-e)'), ('65', '65 (NFC-e)')], max_length=2, verbose_name='Modelo')),
                ('serie', models.PositiveIntegerField(verbose_name='Série')),
                ('numero', models.PositiveIntegerField(verbose_name='Número')),
                ('chave_acesso', models.CharField(max_length=44, verbose_name='Chave de Acesso')),
                ('status', models.CharField(choices=[('EM_PROCESSAMENTO', 'Em Processamento'), ('AUTORIZADA', 'Autorizada'), ('REJEITADA', 'Rejeitada'), ('CANCELADA', 'Cancelada')], default='EM_PROCESSAMENTO', max_length=20, verbose_name='Status')),
                ('ambiente', models.CharField(choices=[('HOMOLOGACAO', 'Homologação'), ('PRODUCAO', 'Produção')], max_length=20, verbose_name='Ambiente')),
                ('protocolo', models.CharField(blank=True, max_length=100, verbose_name='Protocolo')),
                ('motivo_rejeicao', models.TextField(blank=True, verbose_name='Motivo da Rejeição')),
                ('xml_assinado', models.TextField(blank=True, verbose_name='XML Assinado')),
                ('emitente_documento', models.CharField(blank=True, max_length=14, verbose_name='Emitente Documento')),
                ('emitente_nome', models.CharField(blank=True, max_length=255, verbose_name='Emitente Nome')),
                ('destinatario_documento', models.CharField(blank=True, max_length=14, verbose_name='Destinatário Documento')),
                ('destinatario_nome', models.CharField(blank=True, max_length=255, verbose_name='Destinatário Nome')),
                ('valor_produtos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor dos Produtos')),
                ('valor_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Total')),
                ('valor_descontos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Descontos')),
                ('data_emissao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Emissão')),
                ('data_autorizacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Autorização')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_fiscais', to='core.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='fiscal.empresa')),
                ('fornecedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_fiscais', to='core.fornecedor')),
                ('venda', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nota_fiscal', to='core.venda')),
            ],
            options={
                'verbose_name': 'Nota Fiscal',
                'verbose_name_plural': 'Notas Fiscais',
                'ordering': ['-data_emissao', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EstoqueMovimento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('origem', models.CharField(choices=[('ENTRADA', 'Entrada'), ('VENDA', 'Venda'), ('AJUSTE', 'Ajuste'), ('DEVOLUCAO', 'Devolução'), ('TRANSFERENCIA', 'Transferência')], max_length=15, verbose_name='Origem')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=14, verbose_name='Quantidade')),
                ('custo_unitario', models.DecimalField(decimal_places=4, default=Decimal('0.00'), max_digits=14, verbose_name='Custo Unitário')),
                ('saldo_resultante', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True, verbose_name='Saldo Resultante')),
                ('observacao', models.CharField(blank=True, max_length=255, verbose_name='Observação')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentos_estoque', to='fiscal.empresa')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movimentos_estoque', to='core.produto')),
                ('nota', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentos_estoque', to='fiscal.notafiscal')),
            ],
            options={
                'verbose_name': 'Movimentação de Estoque',
                'verbose_name_plural': 'Movimentações de Estoque',
            },
        ),
        migrations.CreateModel(
            name='NotaItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo_produto', models.CharField(blank=True, max_length=60, verbose_name='Código')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('ncm', models.CharField(blank=True, max_length=8, verbose_name='NCM')),
                ('cfop', models.CharField(blank=True, max_length=4, verbose_name='CFOP')),
                ('cest', models.CharField(blank=True, max_length=7, verbose_name='CEST')),
                ('unidade', models.CharField(blank=True, max_length=6, verbose_name='Unidade')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))], verbose_name='Quantidade')),
                ('valor_unitario', models.DecimalField(decimal_places=6, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.000001'))], verbose_name='Valor Unitário')),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Total')),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Desconto')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('nota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='fiscal.notafiscal')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_itens', to='core.produto')),
            ],
            options={
                'verbose_name': 'Item de Nota',
                'verbose_name_plural': 'Itens de Nota',
            },
        ),
        migrations.CreateModel(
            name='XMLArmazenado',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo_documento', models.CharField(choices=[('NOTA', 'Nota Fiscal'), ('PROCNFE', 'procNFe'), ('EVENTO', 'Evento')], default='NOTA', max_length=12, verbose_name='Tipo de Documento')),
                ('ambiente', models.CharField(blank=True, choices=[('HOMOLOGACAO', 'Homologação'), ('PRODUCAO', 'Produção')], max_length=20, verbose_name='Ambiente')),
                ('chave_acesso', models.CharField(blank=True, max_length=44, verbose_name='Chave de Acesso')),
                ('xml_texto', models.TextField(verbose_name='XML (texto completo)')),
                ('storage_path', models.CharField(blank=True, max_length=255, verbose_name='Storage Path')),
                ('hash_sha1', models.CharField(blank=True, max_length=40, verbose_name='Hash SHA1')),
                ('hash_sha256', models.CharField(blank=True, max_length=64, verbose_name='Hash SHA256')),
                ('importado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('nota', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xml_armazenado', to='fiscal.notafiscal')),
            ],
            options={
                'verbose_name': 'XML Armazenado',
                'verbose_name_plural': 'XMLs Armazenados',
            },
        ),
        migrations.AddIndex(
            model_name='notafiscal',
            index=models.Index(fields=['empresa', '-created_at'], name='nota_empresa_created_idx'),
        ),
        migrations.AddIndex(
            model_name='notafiscal',
            index=models.Index(fields=['status'], name='nota_status_idx'),
        ),
        migrations.AddIndex(
            model_name='notafiscal',
            index=models.Index(fields=['ambiente'], name='nota_ambiente_idx'),
        ),
        migrations.AddConstraint(
            model_name='notafiscal',
            constraint=models.UniqueConstraint(fields=('empresa', 'chave_acesso'), name='nota_fiscal_unique_empresa_chave'),
        ),
        migrations.AddConstraint(
            model_name='notafiscal',
            constraint=models.UniqueConstraint(fields=('empresa', 'modelo', 'serie', 'numero'), name='nota_fiscal_unique_empresa_modelo_serie_numero'),
        ),
        migrations.AddIndex(
            model_name='estoquemovimento',
            index=models.Index(fields=['empresa', 'produto', '-criado_em'], name='estoque_empresa_produto_idx'),
        ),
        migrations.AddIndex(
            model_name='estoquemovimento',
            index=models.Index(fields=['origem'], name='estoque_origem_idx'),
        ),
        migrations.AddIndex(
            model_name='notaitem',
            index=models.Index(fields=['nota'], name='nota_item_nota_idx'),
        ),
        migrations.AddIndex(
            model_name='notaitem',
            index=models.Index(fields=['produto'], name='nota_item_produto_idx'),
        ),
        migrations.AddIndex(
            model_name='xmlarmazenado',
            index=models.Index(fields=['chave_acesso'], name='xml_chave_idx'),
        ),
        migrations.AddIndex(
            model_name='xmlarmazenado',
            index=models.Index(fields=['tipo_documento'], name='xml_tipo_idx'),
        ),
    ]
